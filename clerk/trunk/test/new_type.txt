nt
test.type3
!
nt
test.type2
!
nt
test.type1
!
lt
!
na
test.app1
!
la
!
sf
test.type1
@
fun1
@

($a)
a.b
c.d
a.b.c (1)
b.d (some text (goes) here)

do
	if $a > 1 do
		1 + 2 * 3 / $a
	elseif $a == 0 do
		$a
	end
end
!
dump
test.type1
@
fun1
!
sf
test.type1
@
fun2
@

($a)
do
	var $b = 0;
	while $a > 0 do
		var $c = 
			repeat
				$a and $b or $c
				break
			until $a == 0 end;
	
		do
			var $d = 0;
			break
		end
	end
end
!
dump
test.type1
@
fun2
!
sf
test.type1
@
fun3
@
($a,$b)
do
	$a{a,b= 1+1;c{['a' 'b' $b]}}
handle a,$c do
	$c
handle v do
	'end'
end

!
dump
test.type1
@
fun3
!
sf
test.type1
@
fun4
@
($a,$b)
do
	for $1,$2 = fun3($a,$b) do
		fun3($1)
	end
	
	$b.each a{+*.$1,-$2.$3} do
		'each'
	end
end

!
dump
test.type1
@
fun4
!
